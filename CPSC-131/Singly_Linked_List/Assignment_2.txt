A memory leak happens when a portion of memory is dynamically allocated by your program, but that allocation is never deleted when your program exits. This means that the rest of computer will not be able to use that memory for other programs. This is not immediately a problem, but it becomes a bigger problem as the memory leak grows from your program. The only way that it is possible to fix this issue is to shutdown the computer. In alot of scenarios, shuting down the computer is something that cannot be done. For example, amazon servers rarely shutdown their computers, because any downtime on their website, usually relates to reduced sales for the time it was down. So, for a memory leak to arise in one of these servers would be critical, possibly causing millions of dollars lost over all of the shutdowns they have. Also, memory leaks usually cause computers to slow down, since less ram is available overall for the operating system to use.

We can usually prevent memory leaks from occuring, by deleting memory allocations appropriately when the linked-list is not necessary anymore.Using the 'delete' operator will allow a dynamically allocated node to be de-allocated from memory. This MUST be done individually for every node in order to completely remove memory leaks in your program. 